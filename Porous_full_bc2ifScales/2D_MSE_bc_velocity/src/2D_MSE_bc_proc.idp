// Set of functions and macros useful for postprocessing results.
// Provides volume average using
// trapezoidal rule, as well as outputing plane averaged profiles.
// We also define color scheme here.

// Volume averaging macro, need avgV#var defined in the main file
// (to avoid multiple definitions of the variable.
macro volAvg(miny,maxy,Ntrp,MSH,var)
{
int  Nbox   = #Ntrp;
real dzstep = ((maxy)-(miny)-2.0e-6)/Nbox;
real[int] smpval(Nbox+1);
real tmpval = 0;
for(int i=0; i<Nbox+1; i++) smpval(i) = int1d(MSH,levelset=(y- (miny+1.0e-6+i*dzstep) ))( var );
for(int i=0; i<Nbox; i++) tmpval = tmpval + 0.5*(smpval(i)+smpval(i+1))*dzstep;
avgV#var = tmpval;
}
// EOM

// Line slice output macro
macro linAvgSave(MSH, velx, vely, pres, fname)
{
Nsamp = Nsamp*(ymax-ymin);
real[int,int] PlaneUavg(5,Nsamp);
real          Fslice;
for (int i=0; i<Nsamp; i++)
{
    PlaneUavg(0,i) = ymin+1e-6 + i*(ymax-ymin-2e-6)/(Nsamp-1.0);
    Fslice         = int1d(MSH,levelset=(y-PlaneUavg(0,i)))( 1.0  );
    PlaneUavg(1,i) = int1d(MSH,levelset=(y-PlaneUavg(0,i)))( velx );
    PlaneUavg(2,i) = int1d(MSH,levelset=(y-PlaneUavg(0,i)))( vely );
    PlaneUavg(3,i) = int1d(MSH,levelset=(y-PlaneUavg(0,i)))( pres );
    PlaneUavg(4,i) = PlaneUavg(3,i) / Fslice;
}
ofstream resfile(fname);
resfile << "# interface coord = " << intfShft << endl;
resfile << "# y, <u>_y, <v>_y, <p>_y, <p>^i_y " << endl;
for (int i=0; i<Nsamp; i++)
    resfile << PlaneUavg(0,i) << " " << PlaneUavg(1,i) << " " << PlaneUavg(2,i) << " "
            << PlaneUavg(3,i) << " " << PlaneUavg(4,i) << endl;
}
// EOM
